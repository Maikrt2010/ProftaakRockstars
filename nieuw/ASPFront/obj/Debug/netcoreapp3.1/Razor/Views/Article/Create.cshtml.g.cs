#pragma checksum "C:\Users\Kevin\Documents\GitHub\ProftaakRockstars\nieuw\ASPFront\Views\Article\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f81d12ec35a4ce4685b40c24182118d571837996"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Article_Create), @"mvc.1.0.view", @"/Views/Article/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Kevin\Documents\GitHub\ProftaakRockstars\nieuw\ASPFront\Views\_ViewImports.cshtml"
using ASPFront;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Kevin\Documents\GitHub\ProftaakRockstars\nieuw\ASPFront\Views\_ViewImports.cshtml"
using ASPFront.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f81d12ec35a4ce4685b40c24182118d571837996", @"/Views/Article/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5fd39482443d0312b01f61b72a878ed7a7fbbded", @"/Views/_ViewImports.cshtml")]
    public class Views_Article_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("post-data-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Kevin\Documents\GitHub\ProftaakRockstars\nieuw\ASPFront\Views\Article\Create.cshtml"
  
    ViewData["Title"] = "Create Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
<script src=""https://cdn.tiny.cloud/1/x5qtbwjjub75e8k47llgn2qnoctqja5ugz2qlr5cn7ctcj3p/tinymce/5/tinymce.min.js""
        referrerpolicy=""origin""></script>
<style>
    .tags-input-wrapper {
        background: transparent;
        padding: 10px;
        border-radius: 4px;
        max-width: 400px;
        border: 1px solid #ccc
    }

        .tags-input-wrapper input {
            border: none;
            background: white;
            outline: none;
            width: 100%;
        }

        .tags-input-wrapper .tag {
            display: inline-block;
            background-color: #F3E300;
            color: rgb(0, 0, 0);
            font-size: 14px;
            border-radius: 40px;
            padding: 0px 3px 0px 7px;
            margin-right: 5px;
            margin-bottom: 7px;
            box-shadow: 0 5px 15px -2px rgba(250, 14, 126, .7)
        }

            .tags-input-wrappe");
            WriteLiteral(@"r .tag a {
                margin: 0 7px 3px;
                display: inline-block;
                cursor: pointer;
            }

    .containerinput {
        margin-left: 10%;
        margin-right: 10%;
    }

    .block {
        display: block;
        width: 100%;
        border: none;
        background-color: #F3E300;
        padding: 14px 28px;
        font-size: 16px;
        cursor: pointer;
        text-align: center;
    }

    .titlemake {
        text-align: center;
        font-size: 150%
    }
</style>

<div class=""titlemake"">
    <br><h1>Een nieuw artikel maken</h1><br>
</div>
<div class=""containerinput"">
    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f81d12ec35a4ce4685b40c24182118d5718379965855", async() => {
                WriteLiteral(@"

        <h3>Vul hier de titel van uw artikel in:</h3>
        <input type=""text"" id=""title"" placeholder=""Titel"">
        <h3>Vul hier uw naam in:</h3>
        <input type=""text"" id=""author"" placeholder=""Auteur"">
        <h3>Voeg hier tags toe:</h3>
        <input type=""text"" id=""tag-input"" placeholder=""Tags""><br>
        <textarea id=""texteditor""></textarea><br>
        <button type=""submit"" class=""block"">Post Data</button>
    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
</div>



<script>


    //javascript voor tags

    (function (factory) {

        if (typeof module == 'object' && typeof module.exports == 'object')
            module.exports = factory();
        else if (typeof window == 'object')
            window.TagsInput = factory();
        else
            console.error('To use this library you need to either use browser or node.js [require()]');

    })(function () {
        ""use strict""

        var initialized = false

        // Plugin Constructor
        var TagsInput = function (opts) {
            this.options = Object.assign(TagsInput.defaults, opts);
            this.init();
        }

        // Initialize the plugin
        TagsInput.prototype.init = function (opts) {
            this.options = opts ? Object.assign(this.options, opts) : this.options;

            if (initialized)
                this.destroy();

            if (!(this.orignal_input = document.getElementById(this.options.selector))) {
              ");
            WriteLiteral(@"  console.error(""tags-input couldn't find an element with the specified ID"");
                return this;
            }

            this.arr = [];
            this.wrapper = document.createElement('div');
            this.input = document.createElement('input');
            init(this);
            initEvents(this);

            initialized = true;
            return this;
        }

        // Add Tags
        TagsInput.prototype.addTag = function (string) {

            if (this.anyErrors(string))
                return;

            this.arr.push(string);
            var tagInput = this;

            var tag = document.createElement('span');
            tag.className = this.options.tagClass;
            tag.innerText = string;

            var closeIcon = document.createElement('a');
            closeIcon.innerHTML = '&times;';

            // delete the tag when icon is clicked
            closeIcon.addEventListener('click', function (e) {
                e.preventDefault(");
            WriteLiteral(@");
                var tag = this.parentNode;

                for (var i = 0; i < tagInput.wrapper.childNodes.length; i++) {
                    if (tagInput.wrapper.childNodes[i] == tag)
                        tagInput.deleteTag(tag, i);
                }
            })


            tag.appendChild(closeIcon);
            this.wrapper.insertBefore(tag, this.input);
            this.orignal_input.value = this.arr.join(',');

            return this;
        }

        // Delete Tags
        TagsInput.prototype.deleteTag = function (tag, i) {
            tag.remove();
            this.arr.splice(i, 1);
            this.orignal_input.value = this.arr.join(',');
            return this;
        }

        // Make sure input string have no error with the plugin
        TagsInput.prototype.anyErrors = function (string) {
            if (this.options.max != null && this.arr.length >= this.options.max) {
                console.log('max tags limit reached');
                return tru");
            WriteLiteral(@"e;
            }

            if (!this.options.duplicate && this.arr.indexOf(string) != -1) {
                console.log('duplicate found "" ' + string + ' "" ')
                return true;
            }

            return false;
        }

        // Add tags programmatically
        TagsInput.prototype.addData = function (array) {
            var plugin = this;

            array.forEach(function (string) {
                plugin.addTag(string);
            })
            return this;
        }

        // Get the Input String
        TagsInput.prototype.getInputString = function () {
            return this.arr.join(',');
        }


        // destroy the plugin
        TagsInput.prototype.destroy = function () {
            this.orignal_input.removeAttribute('hidden');

            delete this.orignal_input;
            var self = this;

            Object.keys(this).forEach(function (key) {
                if (self[key] instanceof HTMLElement)
                    se");
            WriteLiteral(@"lf[key].remove();

                if (key != 'options')
                    delete self[key];
            });

            initialized = false;
        }

        // Private function to initialize the tag input plugin
        function init(tags) {
            tags.wrapper.append(tags.input);
            tags.wrapper.classList.add(tags.options.wrapperClass);
            tags.orignal_input.setAttribute('hidden', 'true');
            tags.orignal_input.parentNode.insertBefore(tags.wrapper, tags.orignal_input);
        }

        // initialize the Events
        function initEvents(tags) {
            tags.wrapper.addEventListener('click', function () {
                tags.input.focus();
            });


            tags.input.addEventListener('keydown', function (e) {

                var str = tags.input.value.trim();

                if (!!(~[9, 13, 188].indexOf(e.keyCode))) {
                    tags.input.value = """";
                    if (str != """")
                       ");
            WriteLiteral(@" tags.addTag(str);
                }

            });
        }


        // Set All the Default Values
        TagsInput.defaults = {
            selector: '',
            wrapperClass: 'tags-input-wrapper',
            tagClass: 'tag',
            max: null,
            duplicate: false
        }

        return TagsInput;
    });











    $(document).ready(function () {
        $(window).keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });
    tinymce.init({
        selector: ""#texteditor"",
        plugins: 'autoresize, image code',
        menubar: false,
        theme_advanced_blockformats: 'h2,h3,p',
        toolbar: "" undo redo | styleselect | bold italic underline| link | print preview media fullpage | image"",
        placeholder: ""Typ hier uw artikel ...""
    });

    $(document).ready(function () {
        let article;
        let ");
            WriteLiteral(@"title;
        let author;
        let tag;
        $(""#post-data-form"").submit(function (e) {
            article = tinymce.get(""texteditor"").getContent();
            title = document.getElementById(""title"").value;
            author = document.getElementById(""author"").value;
            tag = document.getElementById(""tag-input"").value;
            const data = { article, title, author, tag };
            const options = {
                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    ""Content-Type"": ""application/json""
                }
            }
            title = ""<h1 style= \""font-size:150px; text-align:center\"">"" + title + ""</h1>"";
            document.body.innerHTML = title + article;
            fetch('/api', options);
            return false;
        });
    });


</script>





<!-- <script src=""/js/tags-input.js""></script> -->

<script>
    var tagInput1 = new TagsInput({
        selector: 'tag-input");
            WriteLiteral("\',\r\n        duplicate: false,\r\n        max: 10\r\n    });\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
